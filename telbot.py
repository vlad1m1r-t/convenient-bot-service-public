import os.path
import shutil
from pprint import pprint

import telebot
import sqlite3
import requests
import datetime
from bs4 import BeautifulSoup
from pytube import YouTube

con = sqlite3.connect("usersbot.db", check_same_thread=False)
cur = con.cursor()

token = '–í–∞—à —Ç–æ–∫–µ–Ω'
bot = telebot.TeleBot(token)
@bot.message_handler(commands=['start'])
def check_reg_users(message):
    info = cur.execute("SELECT chatid FROM users where chatid=?", (message.chat.id,))
    if info.fetchone() is None:
        bot.send_message(message.chat.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {message.from_user.first_name}! –Ø –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ —Ç–≤–æ—ë –∏–º—è. –ü–æ–∑–≤–æ–ª—å —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–±–µ!')
        cur.execute("INSERT INTO users (chatid, name) VALUES    (?,?)", (message.chat.id, message.from_user.first_name))
        msg = bot.send_message(message.chat.id, f'–ì–¥–µ —Ç—ã –∂–∏–≤–µ—à—å {message.from_user.first_name}? (–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞)')
        bot.register_next_step_handler(msg, reg_city)
        con.commit()
    else:
        bot.send_message(message.chat.id, f'–Ø —Ç–µ–±—è —Å–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name}!')

def reg_city(message):
    cur.execute("UPDATE users SET city=? WHERE chatid=?", (message.text, message.chat.id,))
    con.commit()
    msg1 = bot.send_message(message.chat.id, f'–í—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª —Ç–∞–º –ø–æ–±—ã–≤–∞—Ç—å! –ö–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç? (–¢–µ–º—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!)')
    bot.register_next_step_handler(msg1, reg_themes)

def reg_themes(message):
    cur.execute("UPDATE users SET themes=? WHERE chatid=?", (message.text, message.chat.id,))
    con.commit()
    bot.send_message(message.chat.id, f'–ê —É –Ω–∞—Å –≤–∫—É—Å—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç! –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è.\n–ü–æ–ø—Ä–æ–±—É–π —É –º–µ–Ω—è —á—Ç–æ-—Ç–æ —É–∑–Ω–∞—Ç—å {message.from_user.first_name}???')

@bot.message_handler(commands=['weather'])
def get_weather(message):
    open_weather_token = '–í–∞—à —Ç–æ–∫–µ–Ω'
    city_id = cur.execute("SELECT city FROM users WHERE chatid=?", (message.chat.id,))
    city = [i for i in city_id.fetchone()]

    url = requests.get(f'http://api.openweathermap.org/geo/1.0/direct?q={city},&appid={open_weather_token}')
    lat = url.json()[0]['lat']
    lon = url.json()[0]['lon']
    urlweather = requests.get(
        f'https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={open_weather_token}&units=metric')

    code_description = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B"
    }

    weather_description = urlweather.json()["weather"][0]["main"]
    if weather_description in code_description:
        wd = code_description[weather_description]
    else:
        wd = '–ü–æ—Å–º–æ—Ç—Ä–∏ –ª—É—á—à–µ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç–∞–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç!'

    city_get = urlweather.json()["name"]
    temp = urlweather.json()["main"]["temp"]
    temp_max = urlweather.json()["main"]["temp_max"]
    temp_feels_like = urlweather.json()["main"]["feels_like"]
    humidity = urlweather.json()["main"]["humidity"]
    bot.send_message(message.chat.id, f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_get}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C –û—à—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temp_feels_like}¬∞C, {wd}\n'
          f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max}¬∞C\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%')


@bot.message_handler(commands=['news'])
def get_news(message):
    token_news = '–í–∞—à —Ç–æ–∫–µ–Ω'
    now = datetime.datetime.now()
    date = now.strftime('%Y-%m-%d')
    themes = [i.split(',') for i in cur.execute("SELECT themes FROM users WHERE chatid=?", (message.chat.id,)).fetchone()]
    for t in range(len(themes[0])):
        theme = themes[0][t]
        url = requests.get(f'https://newsapi.org/v2/everything?q={theme}&from={date}&sortBy=popularity&apiKey={token}').json()
        status = url['status']
        if status == 'ok':
            for i in range(url['totalResults']):
                news_href = url['articles'][i]['url']
                bot.send_message(message.chat.id, f"[-{url['articles'][i]['title']}]({news_href})", parse_mode='Markdown')

@bot.message_handler(commands=['rate'])
def exchange_rate(message):
    now = datetime.datetime.now()
    date = now.strftime('%d/%m/%Y')
    url = requests.get(f'https://cbr.ru/scripts/XML_daily.asp?date_req={date}')
    urlbitc = requests.get("https://www.blockchain.com/ru/ticker")
    soup = BeautifulSoup(url.text, 'lxml')
    rate_usd = soup.find(id="R01235").find('value').text.split(',')[0]
    rate_eur = soup.find(id="R01239").find('value').text.split(',')[0]
    bot.send_message(message.chat.id, f'–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä –°–®–ê: {rate_usd}—Ä üíµ\n–ö—É—Ä—Å –ï–≤—Ä–æ: {rate_eur}—Ä üí∂\n–ë–∏—Ç–∫–æ–∏–Ω: {urlbitc.json()["USD"]["last"]}$')

@bot.message_handler(commands=['update_city'])
def update_city(messange):
    new_city = bot.send_message(messange.chat.id, '–ü–µ—Ä–µ—Ö–∞–ª(–∞) –≤ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥? –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥(–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ)')
    bot.register_next_step_handler(new_city,updatecity)
def updatecity(message):
    cur.execute("UPDATE users set city=? where chatid=?", (message.text, message.chat.id,))
    con.commit()
    bot.send_message(message.chat.id, f'–Ø –∑–∞–ø–æ–º–Ω–∏–ª! –¢–µ–ø–µ—Ä—å —Ç—ã –∂–∏–≤–µ—à—å –≤ "{message.text}"')

@bot.message_handler(commands=['update_themes'])
def update_themes(messange):
    new_themes = bot.send_message(messange.chat.id, '–•–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–º—ã? –í–≤–æ–¥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!')
    bot.register_next_step_handler(new_themes,updatethemes)
def updatethemes(message):
    cur.execute("UPDATE users set themes=? where chatid=?", (message.text, message.chat.id,))
    con.commit()
    bot.send_message(message.chat.id, f'–Ø –∑–∞–ø–æ–º–Ω–∏–ª! –¢–µ–ø–µ—Ä—å —Ç—ã –∂–µ–ª–∞–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ(—Ç–µ–º–∞–º) "{message.text}"')

def get_audio(message):
    yt = YouTube(message.text)
    video = yt.streams.filter(only_audio=True).first()
    out_file = video.download(output_path='audiomp/')
    base, ext = os.path.splitext(out_file)
    new_file = base + '.mp3'
    os.rename(out_file,new_file)
    audio = open(r'{a}'.format(a=new_file), 'rb')
    bot.send_chat_action(message.chat.id, 'upload_audio')
    bot.send_audio(message.chat.id, audio)
    audio.close()
    shutil.rmtree('audiomp/')

@bot.message_handler()
def dont_understand(message):
    if '–ü–æ–≥–æ–¥'.lower() in message.text.lower():
        get_weather(message)
    elif 'https://www.youtube.com/' in message.text:
        get_audio(message)
    elif '–ü—Ä–∏–≤–µ—Ç'.lower() in message.text.lower():
        check_reg_users(message)
    elif '–ù–æ–≤–æ—Å—Ç'.lower() in message.text.lower():
        get_news(message)
    elif '–î–æ–ª–ª'.lower() in message.text.lower() or '–ï–≤—Ä'.lower() in message.text.lower() or '–ë–∏—Ç–∫–æ–∏'.lower() in message.text.lower() or '–ö—É—Ä—Å'.lower() in message.text.lower():
        exchange_rate(message)
    elif '–û–±–Ω–æ–≤–∏ –≥–æ—Ä–æ–¥'.lower() in message.text.lower() or '–ò–∑–º–µ–Ω–∏ –≥–æ—Ä–æ–¥'.lower() in message.text.lower():
        update_city(message)
    elif '–û–±–Ω–æ–≤–∏ —Ç–µ–º'.lower() in message.text.lower() or '–ò–∑–º–µ–Ω–∏ —Ç–µ–º'.lower() in message.text.lower():
        update_themes(message)
    else:
        bot.send_message(message.chat.id, '–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å!')
        bot.send_message(message.chat.id, f'–ó–Ω–∞—é –∫–æ–º–∞–Ω–¥—ã:\n'
                                          f'/start - –î–ª—è —Ç–µ—Ö –∫–æ–≥–æ —è –µ—â–µ –Ω–µ –∑–∞–ø–æ–º–Ω–∏–ªüòë\n'
                                          f'/weather –∏–ª–∏ —Å–ª–æ–≤–æ –ü–û–ì–û–î–ê - –ï—Å–ª–∏ –ª–µ–Ω—å –≤—ã–≥–ª—è–¥—ã–≤–∞—Ç—å –≤ –æ–∫–Ω–æüò§ –∏ –∂–µ–ª–∞–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É!‚òÇ\n'
                                          f'/news –∏–ª–∏ —Å–ª–æ–≤–æ –ù–û–í–û–°–¢–ò  - –ï—Å–ª–∏ –∂–µ–ª–∞–µ—à—å –ø–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–µ–º—ã –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª'
                                          f' –ø–æ —Å–µ–∫—Ä–µ—Ç—Éü§´\n'
                                          f'/rate –∏–ª–∏ —Å–ª–æ–≤–∞ –ö–£–†–°,–î–û–õ–õ–ê–†,–ï–í–†–û,–ë–ò–¢–ö–û–ò–ù - –ï—Å–ª–∏ –∂–µ–ª–∞–µ—à—å —É–∑–Ω–∞—Ç—å –Ω–µ —É–º–µ–Ω—å—à–∏–ª–∏—Å—å –ª–∏ —Ç–≤–æ–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—èüòÅ, –Ω—É –∏ –∑–∞–æ–¥–Ω–æ –∫—É—Ä—Å'
                                          f' –≤–∞–ª—é—ÇüëÄ\n'
                                          f'/update_city –∏–ª–∏ –ò–ó–ú–ï–ù–ò –ì–û–†–û–î, –û–ë–ù–û–í–ò –ì–û–†–û–î —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ç–≤–æ–π –≥–æ—Ä–æ–¥ –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–≥–æ–¥—ã\n'
                                          f'/update_themes –∏–ª–∏ –ò–ó–ú–ï–ù–ò –¢–ï–ú–´, –û–ë–ù–û–í–ò –¢–ï–ú–´ —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–µ–º—ã –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ—Å—Ç–µ–π\n'
                                          f'-–ö–∏–Ω—å –º–Ω–µ —Å—Å—ã–ª–∫—É Youtube, –∞ —è —Ç–µ–±–µ –≤–µ—Ä–Ω—É –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É!')


if __name__ == '__main__':
    bot.infinity_polling(none_stop=True, timeout=123, skip_pending=True)
